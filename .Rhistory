a <- dis$presence_absence$Muricoidea$`Claremontiella nodulosa`$ca$current$current.CTtss697
b <- dis$presence_absence$Muricoidea$`Claremontiella nodulosa`$ca$ssp126$ssp126.CTtss697
c <- dis$presence_absence$Muricoidea$`Claremontiella nodulosa`$ca$ssp585$ssp585.CTtss697
l <- list(a, b, c)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
a <- dis$presence_absence$Muricoidea$`Claremontiella nodulosa`$wmean$current$current.CTtss527
b <- dis$presence_absence$Muricoidea$`Claremontiella nodulosa`$wmean$ssp126$ssp126.CTtss527
c <- dis$presence_absence$Muricoidea$`Claremontiella nodulosa`$wmean$ssp585$ssp585.CTtss527
l <- list(a, b, c)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
dev.of()
dev.off()
dev.off()
bn <- "Mithraculus forceps"
a <- dis$presence_absence$Muricoidea[[bn]]$wmean$current$current.CTtss527
b <- dis$presence_absence$Muricoidea[[bn]]$wmean$ssp126$ssp126.CTtss527
c <- dis$presence_absence$Muricoidea[[bn]]$wmean$ssp585$ssp585.CTtss527
l <- list(a, b, c)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
maps
supfam <- species$superFamily[[species$species == bn]]
supfam <- species$superFamily[species$species == bn]
supfam
source("~/.active-rstudio-document", echo=TRUE)
bn <- "Mithraculus forceps"
supfam <- species$superFamily[species$species == bn]
a <- dis$presence_absence[[supfam]][[bn]]$wmean$current$current.CTtss527
a <- dis$presence_absence[[supfam]][[bn]]$wmean$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
a
bn <- "Mithraculus forceps"
supfam <- species$superFamily[species$species == bn]
a <- dis$presence_absence[[supfam]][[bn]]$wmean$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
dev.off()
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc
species
# bn <- "Mithraculus forceps"
bn <- "Macrocoeloma nodipes"
supfam <- species$superFamily[species$species == bn]
a <- dis$presence_absence[[supfam]][[bn]]$wmean$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
dev.off()
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
a <- dis$presence_absence[[supfam]][[bn]]$ca$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$ca$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$ca$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
species
bn <- "Teleophrys ruber"
dev.off()
supfam <- species$superFamily[species$species == bn]
a <- dis$presence_absence[[supfam]][[bn]]$wmean$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
a <- dis$presence_absence[[supfam]][[bn]]$ca$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$ca$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$ca$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
d <- dis$presence_absence[[supfam]][[bn]]$ca
dis$presence_absence[[supfam]][[bn]]$ca
# bn <- "Mithraculus forceps"
bn <- "Macrocoeloma nodipes"
supfam <- species$superFamily[species$species == bn]
a <- dis$presence_absence[[supfam]][[bn]]$wmean$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
a <- dis$presence_absence[[supfam]][[bn]]$ca$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$ca$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$ca$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
species
# bn <- "Mithraculus forceps"
# bn <- "Macrocoeloma nodipes"
# bn <- "Teleophrys ruber"
bn <- "Claremontiella nodulosa"
dev.off()
supfam <- species$superFamily[species$species == bn]
a <- dis$presence_absence[[supfam]][[bn]]$wmean$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$wmean$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
a <- dis$presence_absence[[supfam]][[bn]]$ca$current
a <- a[names(a)[which(grepl("tss", names(a)))]]
b <- dis$presence_absence[[supfam]][[bn]]$ca$ssp126
b <- b[names(b)[which(grepl("tss", names(b)))]]
d <- dis$presence_absence[[supfam]][[bn]]$ca$ssp585
d <- d[names(d)[which(grepl("tss", names(d)))]]
l <- list(a, b, d)
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$MTQ)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
lc <- lapply(l, \(x) terra::crop(x, terra::ext(maps$GLP)))
par(mfrow = c(1, 3)); plot(lc[[1]]); plot(lc[[2]]); plot(lc[[3]])
# Données
d <- read.csv("data/raw/body_fat.csv")
d
str(d)
View(d)
names(d)
hist(d)
d
str(d)
hist(d$X.Fat)
hist(d$X.Fat, xlim = c(0, 50))
hist(d$X.Fat, xlim = c(0, 50), breaks = 10)
hist(d$X.Fat, xlim = c(0, 50), breaks = 20)
hist(d$X.Fat, xlim = c(0, 50), breaks = 15)
hist(d$X.Fat, xlim = c(0, 50), breaks = 12)
hist(d$X.Fat, xlim = c(0, 50), breaks = 10)
hist(d$X.Fat, xlim = c(0, 50), breaks = 20)
?hist
hist(d$X.Fat, xlim = c(0, 50), breaks = "Scott")
hist(d$X.Fat, xlim = c(0, 50), breaks = "FD")
hist(d$X.Fat, xlim = c(0, 50), breaks = seq(1:20))
hist(d$X.Fat, xlim = c(0, 50), breaks = 20)
hist(d$X.Fat, breaks = 20)
d
?sample
n <- 500000
n_resamp <- 500000
b <- lapply(
seq(1, n_resamp),
sample,
x   = d$X.Fat,
size = length(d$X.Fat),
replace = TRUE
)
length(d$X.Fat)
d$X.Fat
sample(
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
sample(
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
b <- lapply(
X   = seq(1, n_resamp),
FUN = sample,
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
?lapply
n_resamp <- 500000
b <- lapply(
X   = seq(1, n_resamp),
FUN = \(x) {
sample(
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
}
)
b
tb <- Reduce(cbind, b)
n_resamp <- 5000
b <- lapply(
X   = seq(1, n_resamp),
FUN = \(x) {
sample(
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
}
)
tb <- Reduce(cbind, b)
dim(tb)
tb
head(tb)
dim(tb)
View(tb)
class(tb)
tb <- as.data.frame(tb)
head(tb)
library(tibble)
tb <- as_tibble(tb)
tb
m <- apply(tb, 2, mean)
m
hist(m)
hist(m, breaks = 100)
hist(m, breaks = 50)
n_resamp <- 50000
b <- lapply(
X   = seq(1, n_resamp),
FUN = \(x) {
sample(
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
}
)
tb <- Reduce(cbind, b)
source("~/.active-rstudio-document", echo=TRUE)
require(tibble)
# Données
d <- read.csv("data/raw/body_fat.csv")
hist(d$X.Fat, breaks = 20)
n_resamp <- 10000
b <- lapply(
X   = seq(1, n_resamp),
FUN = \(x) {
sample(
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
}
)
tb <- Reduce(cbind, b) %>%
as_tibble()
m <- apply(tb, 2, mean)
hist(m, breaks = 100)
m
summary(m)
quantile(m, probs = c(2.25, 97.25))
quantile(m, probs = c(0.25, 0.975))
quantile(m, probs = c(0.5, 0.95))
quantile(m, probs = c(0.25, 0.975))
require(tibble)
# Données
d <- read.csv("data/raw/body_fat.csv")
hist(d$X.Fat, breaks = 20)
n_resamp <- 100000
b <- lapply(
X   = seq(1, n_resamp),
FUN = \(x) {
sample(
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
}
)
tb <- Reduce(cbind, b) %>%
as_tibble()
source(here::here("scripts", "boot.R"))
# Test avec noms d'espèces
d <- species$species
d
# Test avec noms d'espèces
d <- species$species
n_resamp <- 10000
b <- lapply(
X   = seq(1, n_resamp),
FUN = \(x) {
sample(
x       = d$X.Fat,
size    = length(d$X.Fat),
replace = TRUE
)
}
)
b <- lapply(
X   = seq(1, n_resamp),
FUN = \(x) {
sample(
x       = d,
size    = length(d),
replace = TRUE
)
}
)
tb <- Reduce(cbind, b) %>%
as_tibble()
m
tb
m <- apply(tb, 2, \(x) length(unique(x)))
m
hist(m, breaks = 100)
hist(m)
quantile(m, probs = c(0.25, 0.975))
?combn
combn(1, 2)
combn(2, 1)
combn(3, 1)
combn(4, 1)
combn(4, 2)
combn(3, 2)
dnbinom
?dnbinom
source(here::here("scripts", "boot.R"))
# importation/visualisation des probabilités d'occurrences / présences-absences
source(here("scripts", "popa_import.R"))
# presence-absence | committee averaging
a <- popaPlot(
projRasters         = dis,
type                = "presence_absence",
superfamily         = "all",
ensemble_algorithm  = "wmean",
threshold_algorithm = "ROC",
projection_time     = "ssp585"
)
# presence-absence | committee averaging
a <- popaPlot(
projRasters         = dis,
type                = "presence_absence",
superfamily         = "all",
ensemble_algorithm  = "wmean",
threshold_algorithm = "ROC",
projection_time     = "current"
)
a$`Phyllonotus pomum`
# presence-absence | committee averaging
pa_wmean_roc_current <- popaPlot(
projRasters         = dis,
type                = "presence_absence",
superfamily         = "all",
ensemble_algorithm  = "wmean",
threshold_algorithm = "ROC",
projection_time     = "current"
)
ae_wmean_current <- popaPlot(
projRasters         = dis,
type                = "adequation_environnementale",
superfamily         = "all",
ensemble_algorithm  = "wmean",
projection_time     = "current"
)
ae_wmean_current
plot(ae_wmean_current)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/FUN/FUN_popaPlot.R", echo=TRUE)
ae_wmean_current <- popaPlot(
projRasters         = dis,
type                = "adequation_environnementale",
superfamily         = "all",
ensemble_algorithm  = "wmean",
projection_time     = "current"
)
ae_wmean_current$combine
ae_wmean_current$combine %>% plot()
plot(hab_sub$depth)
x11(); plot(hab_sub$depth)
x11(); plot(ifel(hab_sub$depth < -300, 0, hab_sub$depth))
x11(); plot(ifel(hab_sub$depth < -300, NA, hab_sub$depth))
x11(); plot(ifel(hab_sub$depth < -150, NA, hab_sub$depth))
x11(); plot(ifel(hab_sub$depth < -50, NA, hab_sub$depth))
x11(); plot(ae_wmean_current$combine)
x11(); plot(ifel(ae_wmean_current$combine > 400, 1, 0))
# functions
lapply(
list.files(
here("scripts", "FUN"),
full.names = T
),
source
)
# boot data_occ_preparation
# libraries ----
libs_to_call <- list(
"ade4",
"biomod2",
"data.table",
"devtools",
"dismo",
"doMPI",
"factoextra",
"FactoMineR",
"ggnewscale",
"ggplot2",
"ggpubr",
"ggthemes",
"here",
"patchwork",
"purrr",
"raster",
"reshape2",
"sf",
"sp",
"stars",
"stringr",
"terra",
"tidync",
"tidyverse",
"usdm",
"vegan"
)
# library calls
lapply(
libs_to_call,
function(i) {
bool <- is.element(i, .packages(all.available = TRUE))
if (!bool) {
install.packages(i, dependencies = T)
}
library(i, character.only = TRUE)
}
)
# remote libraries (github)
# Sys.getenv("GITHUB_PAT")
# Sys.unsetenv("GITHUB_PAT")
# Sys.getenv("GITHUB_PAT")
# remote libraries ----
# github_accounts <- as.list(
#   rep("SantanderMetGroup", 6)
# )
#
# remote_libs_to_call <- list(
#   "loadeR.java",
#   "climate4R.UDG",
#   "loadeR",
#   "transformeR",
#   "visualizeR",
#   "downscaleR"
# )
#
# mapply(
#   function(pckg, usr) {
#
#     bool <- is.element(pckg, .packages(all.available = TRUE))
#
#     if (!bool) {
#       path_url <- paste0(usr, "/", pckg)
#       print(path_url)
#       devtools::install_github(path_url)
#     }
#
#     library(pckg, character.only = TRUE)
#
#   },
#   remote_libs_to_call,
#   github_accounts,
#   SIMPLIFY = FALSE
# )
# functions
lapply(
list.files(
here("scripts", "FUN"),
full.names = T
),
source
)
makeMyDir(here("data", "tidy", "occ"))
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/boot.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/popa_import.R", echo=TRUE)
# importation/visualisation des probabilités d'occurrences / présences-absences
popa_path <- here("data", "analysis", "compilation")
source(here("scripts", "popa_import.R"))
?transpose
