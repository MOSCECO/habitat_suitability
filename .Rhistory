USE.NAMES = T
)
names(cgc_sub$Majoidea$`Mithraculus forceps`)
clim_global <- sapply(
superFamilies,
\(supfm) {
sapply(
species$species[species$superFamily == supfm],
\(spe) {
cg <- list.files(
here("data", "raw", "climatologies_globales_points", supfm, spe),
full.names = T
) %>%
lapply(read_csv, show_col_types = FALSE)
names(cg) <- list.files(
here("data", "raw", "climatologies_globales_points", supfm, spe)
) %>%
str_split("\\.") %>%
lapply(pluck, 1) %>%
str_split("_") %>%
lapply(., \(x) pluck(x, length(x))) %>%
unlist()
names(cg)[which(names(cg) %in% "bottomt")] <- "sbt"
names(cg)[which(names(cg) %in% "vhm0")]    <- "hm0"
return(cg)
},
simplify  = F,
USE.NAMES = T
)
},
simplify  = F,
USE.NAMES = T
)
# Modification de la forme des climatologies global pour avoir une matrice
clim_global_tb <- sapply(
names(clim_global),
\(supfm) {
sapply(
names(clim_global[[supfm]]),
\(spe) {
# supfm <- "Majoidea"
# spe <- "Stenorhynchus seticornis"
cg <- clim_global[[supfm]][[spe]]
# coords <- cg$sbt[, c("x", "y")]
# uniformisation des stations présentes (problème avec so chais pas pk)
z <- names(which.min(lapply(cg, nrow) %>% unlist()))
tbm <- cg[[z]]
stn <- paste(tbm$x, tbm$y)
coords <- tbm[, c("x", "y")]
cg2 <- lapply(
names(cg),
\(n) {
tb <- cg[[n]]
# uniformisation des stations présentes (problème avec so chais pas pk)
tb <- if (nrow(tb) > length(stn)) {
tbi <- tb[paste(tb$x, tb$y) %in% stn, ]
tbi <- tbi[which(paste(tbi$x, tbi$y) %in% stn), ]
tbi
} else {
tb[which(paste(tb$x, tb$y) %in% stn), ]
}
tb <- tb %>%
select(-c(x, y))
names(tb) <- names(tb) %>%
str_split("_") %>%
lapply(pluck, 2) %>%
paste(n, sep = ".")
return(tb)
})
cbind(coords, do.call(cbind, cg2)) %>%
na.omit()
},
simplify = F,
USE.NAMES = T
)
},
simplify = F,
USE.NAMES = T
)
# Tant que je n'ai pas refait tourner les codes pour C. nodulosa
cgc_sub <- sapply(
names(clim_global_tb),
\(supfm) {
sapply(
names(clim_global_tb[[supfm]]),
\(spe) {
tb <- clim_global_tb[[supfm]][[spe]]
tb <- tb %>%
select(names(.)[grepl("stdv|mean", names(.))])
return(tb)
},
simplify = F,
USE.NAMES = T
)
},
simplify = F,
USE.NAMES = T
)
cgc_sub <- sapply(
names(cgc_sub),
\(supfm) {
sapply(
names(cgc_sub[[supfm]]),
\(spe) {
tb <- cgc_sub[[supfm]][[spe]]
var_col <- usdm::vifstep(as.data.frame(tb %>% na.omit()))@excluded
tb <- tb[, !names(tb) %in% var_col]
return(tb)
},
simplify = F,
USE.NAMES = T
)
},
simplify = F,
USE.NAMES = T
)
cgc_sub
cgc_sub$Majoidea$`Mithraculus forceps`
names(cgc_sub$Majoidea$`Mithraculus forceps`)
clim_proj_sub <- subset(climosaic, names(clim_sub))
# jeux de données environnementales pour calibration du SDM ----
# carte globale des variables environnementales
clim_sub      <- cgc_sub[[supfam]][[bn]]
clim_proj_sub <- subset(climosaic, names(clim_sub))
clim_proj_sub
names(clim_proj_sub)
# Données locales ----
# Présences ----
spp_local <- sp %>%
filter(individualCount > 0) %>%
cbind(type = "pr", id = paste0("pr", 1:nrow(.)), scale = "local") %>%
select(type, id, scale, x, y, individualCount)
spp_local_sf <- st_as_sf(
spp_local,
coords = c("x", "y"),
remove = F,
crs = "EPSG:4326"
)
spp_local_sf <- spp_local_sf %>%
cbind(terra::extract(clim_proj_sub, spp_local_sf, ID = F))
# Absences ----
spa_local <- sp %>%
filter(individualCount == 0) %>%
cbind(type = "ab", id = paste0("ab", 1:nrow(.)), scale = "local") %>%
select(type, id, scale, x, y, individualCount)
spa_local_sf <- st_as_sf(
spa_local,
coords = c("x", "y"),
remove = F,
crs = "EPSG:4326"
)
spa_local_sf <- spa_local_sf %>%
cbind(terra::extract(clim_proj_sub, spa_local_sf, ID = F))
# Données mondiales ----
# Présences ----
pas <- nrow(spp_local_sf) + 1
pas
cgc_clanod_f
bn
global_occf[[bn]]
spp_global_sf <- global_occf[[bn]] %>%
cbind(st_coordinates(cgc_clanod_f)) %>%
cbind(
type = "pr",
id = paste0("pr", pas:(pas + nrow(cgc_clanod_f) - 1)),
scale = "global",
individualCount = 1
) %>%
select(
type, id, scale, x = X, y = Y, individualCount, all_of(names(clim_sub))
)
spp_global_sf <- global_occf[[bn]] %>%
cbind(st_coordinates(.)) %>%
cbind(
type = "pr",
id = paste0("pr", pas:(pas + nrow(.) - 1)),
scale = "global",
individualCount = 1
) %>%
select(
type, id, scale, x = X, y = Y, individualCount, all_of(names(clim_sub))
)
spp_global_sf <- global_occf[[bn]] %>%
cbind(st_coordinates(global_occf[[bn]])) %>%
cbind(
type = "pr",
id = paste0("pr", pas:(pas + nrow(global_occf[[bn]]) - 1)),
scale = "global",
individualCount = 1
) %>%
select(
type, id, scale, x = X, y = Y, individualCount, all_of(names(clim_sub))
)
global_occf[[bn]] %>%
cbind(st_coordinates(global_occf[[bn]]))
global_occf[[bn]] %>%
cbind(st_coordinates(global_occf[[bn]])) %>%
cbind(
type = "pr",
id = paste0("pr", pas:(pas + nrow(global_occf[[bn]]) - 1)),
scale = "global",
individualCount = 1
)
all_of(names(clim_sub)
global_occf[[bn]]
clim_sub
nrow(spp_global_sf)
# Pseudo-absences ----
pa_set <- bm_PseudoAbsences(
resp.var    = rep(1, nrow(spp_global_sf)),
expl.var    = clim_sub,
nb.absences = nrow(spp_global_sf)
)
spp_global_sf
names(clim_sub)
cgc_sub$Majoidea$`Mithraculus forceps`
cgc_sub$Majoidea$`Mithraculus forceps` %>% dim()
cgc_sub$Majoidea$`Stenorhynchus seticornis` %>% dim()
cgc_sub$Muricoidea$`Claremontiella nodulosa` %>% dim()
cgc_sub$Muricoidea$`Stramonita rustica` %>% dim()
lapply(global_occf)
lapply(global_occf, nrow())
lapply(global_occf, dim())
lapply(global_occf, dim)
# jeux de données environnementales pour calibration du SDM ----
# carte globale des variables environnementales
clim_sub      <- cgc_sub[[supfam]][[bn]]
clim_sub
clim_sub
names(clim_sub)
cgc_sub$Majoidea$`Mithraculus forceps`
cgc_sub$Majoidea$`Mithraculus forceps` %>% names()
clim_global$Majoidea$`Mithraculus forceps`$sbt
tb <- clim_global_tb[[supfm]][[spe]]
names(tb)
tb <- tb %>%
select(names(.)[grepl("stdv|mean", names(.))])
names(tb)
names(cgc_sub)
names(cgc_sub[[supfm]])
# sélection des variables environnementales uniquement
# et les métriques que l'on veut sélectionner (ici sd et mean)
cgc_sub <- sapply(
names(clim_global_tb),
\(supfm) {
sapply(
names(clim_global_tb[[supfm]]),
\(spe) {
tb <- clim_global_tb[[supfm]][[spe]]
tb <- tb %>%
select(names(.)[grepl("stdv|mean", names(.))])
return(tb)
},
simplify = F,
USE.NAMES = T
)
},
simplify = F,
USE.NAMES = T
)
# Filtre des variables colinéaires
cgc_sub <- sapply(
names(cgc_sub),
\(supfm) {
sapply(
names(cgc_sub[[supfm]]),
\(spe) {
tb <- cgc_sub[[supfm]][[spe]]
var_col <- usdm::vifstep(as.data.frame(tb %>% na.omit()))@excluded
tb <- tb[, !names(tb) %in% var_col]
return(tb)
},
simplify = F,
USE.NAMES = T
)
},
simplify = F,
USE.NAMES = T
)
tb <- cgc_sub[[supfm]][[spe]]
names(tb)
nms <- names(cgc_sub[[supfm]][[spe]])
tb <- clim_global_tb[[supfm]][[spe]]
tb <- tb %>%
select(all_of(c("x", "y", nms)))
tb
names-tb
names(tb)
tb <- clim_global_tb[[supfm]][[spe]]
?st_sf
?st_as_sf
sf <-st_as_sf(
tb %>% select(all_of(c(nms))),
coords = tb %>% select("x", "y"),
crs = "EPSG:4326"
)
tb %>% select(all_of(nms))
tb %>% select("x", "y")
sf <-st_as_sf(
tb %>% select(all_of(nms)),
coords = tb %>% select("x", "y"),
crs = "EPSG:4326"
)
a <- tb %>% select("x", "y")
head(a)
coords <- tb %>% select("x", "y")
sf <-st_as_sf(
tb %>% select(all_of(nms)),
coords = coords,
crs = "EPSG:4326"
)
coords
sf <-st_as_sf(
tb %>% select(all_of(c("x", "y", nms))),
coords = c("x", "y"),
crs = "EPSG:4326"
)
sf
length(nms)
dim(tb)
names(sf)
# Même object en sf
cgc_sub_sf <- sapply(
names(cgc_sub),
\(supfm) {
sapply(
names(cgc_sub[[supfm]]),
\(spe) {
nms <- names(cgc_sub[[supfm]][[spe]])
tb <- clim_global_tb[[supfm]][[spe]]
st_as_sf(
tb %>% select(all_of(c("x", "y", nms))),
coords = c("x", "y"),
crs = "EPSG:4326"
)
},
simplify = F,
USE.NAMES = T
)
},
simplify = F,
USE.NAMES = T
)
cgc_sub_sf$Majoidea$`Mithraculus forceps`
cgc_sub_sf$Majoidea$`Mithraculus forceps` %>% dim()
cgc_sub$Majoidea$`Mithraculus forceps` %>% dim()
spp_global_sf <- cgc_sub_sf[[bn]] %>%
cbind(st_coordinates(cgc_sub_sf[[bn]])) %>%
cbind(
type = "pr",
id = paste0("pr", pas:(pas + nrow(cgc_sub_sf[[bn]]) - 1)),
scale = "global",
individualCount = 1
) %>%
select(
type, id, scale, x = X, y = Y, individualCount, all_of(names(clim_sub))
)
spp_global_sf <- cgc_sub_sf[[supfam]][[bn]] %>%
cbind(st_coordinates(cgc_sub_sf[[supfam]][[bn]])) %>%
cbind(
type = "pr",
id = paste0("pr", pas:(pas + nrow(cgc_sub_sf[[supfam]][[bn]]) - 1)),
scale = "global",
individualCount = 1
) %>%
select(
type, id, scale, x = X, y = Y, individualCount, all_of(names(clim_sub))
)
spp_global_sf
# Pseudo-absences ----
pa_set <- bm_PseudoAbsences(
resp.var    = rep(1, nrow(spp_global_sf)),
expl.var    = clim_sub,
nb.absences = nrow(spp_global_sf)
)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/boot.R")
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/boot.R")
cgc_sub$Majoidea$`Mithraculus forceps`
cgc_sub$Majoidea$`Mithraculus forceps` %>% names()
cgc
cgc %>% names()
# PARAMÉTRAGE ####
# "GLM", "GBM", "GAM", "CTA", "ANN", "SRE",
# "FDA", "MARS", "RF", "MAXENT", "MAXNET"
alg <- "RF"
# alg <- "MAXENT"
# alg <- "ensemble"
# Nombre de répétitions (nombre de jeux de validation croisées)
CV_nb_rep <- 5
# nom du modèle
vec_name_model <- c(paste0(tolower(alg), CV_nb_rep), "01", "global", "cpc")
pts_name_model <- paste(vec_name_model, collapse = ".")
# Données biologiques ----
bn <- "Claremontiella nodulosa"
supfam <- species$superFamily[species$species == bn]
sp  <- pa[[bn]] %>% as.data.frame(xy = T)
binnam <- str_split(bn, " ")[[1]] %>%
lapply(substr, 1, 3) %>%
paste0(collapse = ".")
# jeux de données environnementales pour calibration du SDM ----
# carte globale des variables environnementales
clim_sub      <- cgc_sub[[supfam]][[bn]]
clim_proj_sub <- subset(climosaic, names(clim_sub))
# Données locales ----
# Présences ----
spp_local <- sp %>%
filter(individualCount > 0) %>%
cbind(type = "pr", id = paste0("pr", 1:nrow(.)), scale = "local") %>%
select(type, id, scale, x, y, individualCount)
spp_local_sf <- st_as_sf(
spp_local,
coords = c("x", "y"),
remove = F,
crs = "EPSG:4326"
)
spp_local_sf <- spp_local_sf %>%
cbind(terra::extract(clim_proj_sub, spp_local_sf, ID = F))
# Absences ----
spa_local <- sp %>%
filter(individualCount == 0) %>%
cbind(type = "ab", id = paste0("ab", 1:nrow(.)), scale = "local") %>%
select(type, id, scale, x, y, individualCount)
spa_local_sf <- st_as_sf(
spa_local,
coords = c("x", "y"),
remove = F,
crs = "EPSG:4326"
)
spa_local_sf <- spa_local_sf %>%
cbind(terra::extract(clim_proj_sub, spa_local_sf, ID = F))
# Données mondiales ----
# Présences ----
pas <- nrow(spp_local_sf) + 1
spp_global_sf <- cgc_sub_sf[[supfam]][[bn]] %>%
cbind(st_coordinates(cgc_sub_sf[[supfam]][[bn]])) %>%
cbind(
type = "pr",
id = paste0("pr", pas:(pas + nrow(cgc_sub_sf[[supfam]][[bn]]) - 1)),
scale = "global",
individualCount = 1
) %>%
select(
type, id, scale, x = X, y = Y, individualCount, all_of(names(clim_sub))
)
# Pseudo-absences ----
pa_set <- bm_PseudoAbsences(
resp.var    = rep(1, nrow(spp_global_sf)),
expl.var    = clim_sub,
nb.absences = nrow(spp_global_sf)
)
rep(1, nrow(spp_global_sf))
nrow(spp_global_sf)
# Pseudo-absences ----
pa_set <- bm_PseudoAbsences(
resp.var    = rep(1, nrow(spp_global_sf)),
expl.var    = subset(clim_sub, names(clim_sub)),
nb.absences = nrow(spp_global_sf)
)
subset(clim_sub, names(clim_sub))
clim_sub %>% class
class(cgc$mean.bottomt)
class(cgc_sub)
# Pseudo-absences ----
pa_set <- bm_PseudoAbsences(
resp.var    = rep(1, nrow(spp_global_sf)),
expl.var    = subset(cgc, names(clim_sub)),
nb.absences = nrow(spp_global_sf)
)
names(cgc)
names(clim_sub)
names(cgc)
grepl("bottomt", "sbt", names(cgc))
gsub("bottomt", "sbt", names(cgc))
names(cgc) <- gsub("vhm0", "hm0", names(cgc))
names(cgc) <- gsub("bottomt", "sbt", names(cgc))
names(cgc)
subset(cgc, names(clim_sub))
# Pseudo-absences ----
pa_set <- bm_PseudoAbsences(
resp.var    = rep(1, nrow(spp_global_sf)),
expl.var    = subset(cgc, names(clim_sub)),
nb.absences = nrow(spp_global_sf)
)
pa_set
View(pa_set$env)
a <- subset(cgc, names(clim_sub))
x11(); (a)
x11(); plot(a)
# Pseudo-absences ----
pa_set <- bm_PseudoAbsences(
resp.var    = rep(1, nrow(spp_global_sf)),
expl.var    = subset(cgc, names(clim_sub)),
nb.absences = nrow(spp_global_sf),
strategy    = "disk"
)
pa_set
View(pa_set$env)
table(pa_set$env)
table(pa_set$env$mean.sbt)
table(is.na(pa_set$env$mean.sbt))
nrow(spp_global_sf)
# Pseudo-absences ----
pa_set <- bm_PseudoAbsences(
resp.var    = rep(1, nrow(spp_global_sf)),
expl.var    = subset(cgc, names(clim_sub)),
nb.absences = nrow(spp_global_sf)
)
table(is.na(pa_set$env$mean.sbt))
table(is.na(pa_set$env$stdv.so))
apply(pa_set, 2, \(x) table(is.na(x)))
apply(pa_set$env, 2, \(x) table(is.na(x)))
rep(1, nrow(spp_global_sf))
