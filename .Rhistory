# my_name    <- "maxent5"
my_pattern <- "Cla.nod.basic.+ensemble"
my_name    <- "ensemble"
vec_weight
paste(my_name, "wmean", paste(vec_weight, collapse = "-")) %>%
paste0(".tif")
paste(my_name, "wmean", paste(vec_weight, collapse = "-"), sep = "_") %>%
paste0(".tif")
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
p <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/.BIOMOD_DATA/Cla.nod.basic.global.cpc.ensemble/ensemble.models/ensemble.models.predictions/Cla.nod.basic.global.cpc.ensemble_EMcaByTSS_mergedData_mergedRun_mergedAlgo.predictions.rds"
a <- readRDS("Cla.nod.basic.global.cpc.ensemble_EMcaByTSS_mergedData_mergedRun_mergedAlgo.predictions")
a <- readRDS(p)
p <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/.BIOMOD_DATA/Cla.nod.basic.global.cpc.ensemble/ensemble.models/ensemble.models.predictions/Cla.nod.basic.global.cpc.ensemble_EMcaByTSS_mergedData_mergedRun_mergedAlgo.predictions"
a <- read_file(p)
a
a <- readRDS(p)
p <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/.BIOMOD_DATA/Cla.nod.basic.global.cpc.ensemble/ensemble.models/ensemble.models.predictions/Cla.nod.basic.global.cpc.ensemble_EMcaByTSS_mergedData_mergedRun_mergedAlgo.predictions.rds"
a <- readRDS(p)
p <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/.BIOMOD_DATA/Cla.nod.basic.global.cpc.ensemble/ensemble.models/ensemble.models.predictions"
list.files(p)
p <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/.BIOMOD_DATA/Cla.nod.basic.global.cpc.ensemble/ensemble.models/ensemble.models.predictions/"
p <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/.BIOMOD_DATA/Cla.nod.basic.global.cpc.ensemble/ensemble.models/ensemble.models.predictions/Cla.nod.basic.global.cpc.ensemble_EMcaByTSS_mergedData_mergedRun_mergedAlgo.predictions.rds"
a <- readRDS(p)
list.files(p)
list.files(p../)
list.files(../p)
p <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/.BIOMOD_DATA/Cla.nod.basic.global.cpc.ensemble/ensemble.models/ensemble.models.predictions/Cla.nod.basic.global.cpc.ensemble_EMcaByTSS_mergedData_mergedRun_mergedAlgo.predictions.rds"
a <- biomod2::load_stored_object(p)
p <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/Cla.nod.basic.global.cpc.ensemble.Cla.nod.basic.global.cpc.ensemble.ensemble.models.out"
a <- load(p)
a
a <- load(p)
a
class(a)
wd <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble/models/Cla.nod.basic.global.cpc.ensemble"
setwd(wd)
load("Cla.nod.basic.global.cpc.ensemble_EMwmeanByTSS_mergedData_mergedRun_mergedAlgo")
View(Cla.nod.basic.global.cpc.ensemble_EMwmeanByTSS_mergedData_mergedRun_mergedAlgo)
a <- Cla.nod.basic.global.cpc.ensemble_EMwmeanByTSS_mergedData_mergedRun_mergedAlgo
get_evaluations(a)
wd <- "/home/borea/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/data/analysis/models/Cla.nod.basic.01.global.cpc.ensemble"
setwd(wd)
load("Cla.nod.basic.global.cpc.ensemble.Cla.nod.basic.global.cpc.ensemble.ensemble.models.out")
a <- Cla.nod.basic.global.cpc.ensemble.Cla.nod.basic.global.cpc.ensemble.ensemble.models.out
get_evaluations(a)
d <- get_evaluations(a)
View(d)
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)
list.files(
here("data", "analysis", "models", f, "proj_current"),
pattern = "\\.tif",
full.names = T
) %>% rast()
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
proj_currents <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
load(
here("data", "analysis", "models", f, "proj_current"),
pattern = "ensemble\\.models\\.out",
full.names = T
) %>% rast()
}
)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
load(
here("data", "analysis", "models", f, "proj_current"),
pattern = "ensemble\\.models\\.out",
full.names = T
)
}
)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
list.files(
here("data", "analysis", "models", f, "proj_current"),
pattern = "ensemble\\.models\\.out",
full.names = T
) %>% load()
}
)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
p <- list.files(
here("data", "analysis", "models", f, "proj_current"),
pattern = "ensemble\\.models\\.out",
full.names = T
)
print(p)
load()
}
)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
p <- list.files(
here("data", "analysis", "models", f, "proj_current"),
pattern = "ensemble\\.ensemble\\.models\\.out",
full.names = T
)
print(p)
load()
}
)
f <- list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)[1]
f
list.files(
here("data", "analysis", "models", f, "proj_current"),
pattern = "ensemble\\.ensemble\\.models\\.out",
full.names = T
)
list.files(
here("data", "analysis", "models", f),
pattern = "ensemble\\.ensemble\\.models\\.out",
full.names = T
)
list.files(
here("data", "analysis", "models", f))
my_pattern <- "Cla.nod.basic.+ensemble"
my_name    <- "ensemble"
f <- list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)[1]
list.files(
here("data", "analysis", "models", f)),
list.files(
here("data", "analysis", "models", f))
p <- list.files(
here("data", "analysis", "models", f),
pattern = "ensemble\\.ensemble\\.models\\.out",
full.names = T
)
p
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
p <- list.files(
here("data", "analysis", "models", f),
pattern = "ensemble\\.ensemble\\.models\\.out",
full.names = T
)
load(p)
}
)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
mods <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
p <- list.files(
here("data", "analysis", "models", f),
pattern = "ensemble\\.ensemble\\.models\\.out",
full.names = T
)
load(p)
}
)
mods
p <- list.files(
here("data", "analysis", "models", f),
pattern = "ensemble\\.ensemble\\.models\\.out"
)
p
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
mods <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.ensemble\\.models\\.out")
load(p)
return(get(p))
}
)
mods
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)
names(mods) <- c("copernicus", "sextant", "habitat")
mods$copernicus
mod_evals <- lapply(mods, get_evaluations)
mod_evals$sextant
mod_evals
mod_evals
names(mod_evals)
mod_evals
thlds     <- lapply(mod_evals, \(tb) {
tb %>% filter(metric.eval == TSS) %>% select(algo, cutoff)
})
thlds     <- lapply(mod_evals, \(tb) {
tb %>% filter(metric.eval == "TSS") %>% select(algo, cutoff)
})
thlds
thlds_TSS     <- lapply(mod_evals, \(tb) {
tb %>% filter(metric.eval == "TSS") %>% select(algo, cutoff)
})
Reduce(mean, thlds)
thlds_TSS_mean <- do.call(rbind, thlds) %>%
groub_by(algo) %>% summarise(cutoff_mean = mean(cutoff))
thlds_TSS_mean <- do.call(rbind, thlds) %>%
group_by(algo) %>% summarise(cutoff_mean = mean(cutoff))
thlds_TSS_mean
# seuil
s_wmean <- thlds_TSS_mean$cutoff_mean[2]
s_wmean
# seuil
s_wmean <- thlds_TSS_mean$cutoff_mean[2]
s_ca    <- thlds_TSS_mean$cutoff_mean[1]
s_wmean
s_ca
thlds_TSS_mean <- do.call(rbind, thlds) %>%
group_by(algo) %>% summarise(cutoff_mean = ceiling(mean(cutoff)))
# seuil
s_wmean <- thlds_TSS_mean$cutoff_mean[2]
s_ca    <- thlds_TSS_mean$cutoff_mean[1]
s_ca
s_wmean
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
# paramètrage ----
patterns <- c("Cla.nod.rf5.0", "Cla.nod.maxent5.0", "Cla.nod.basic.+ensemble")
# paramètrage ----
patterns <- c("Cla.nod.rf5.0", "Cla.nod.maxent5.0", "Cla.nod.basic.+ensemble")
algs     <- c("rf5", "maxent5", "ensemble")
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
my_pattern <- patterns[[1]]
my_name <- algs[[1]]
my_name
my_pattern
# importation des résultats de modèles ----
proj_currents <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
list.files(
here("data", "analysis", "models", f, "proj_current"),
pattern = "\\.tif",
full.names = T
) %>% rast()
}
)
names(proj_currents) <- c("copernicus", "sextant", "habitat")
proj_currents
# Aggrégation par weighted mean
proj_current_wmeans <- lapply(
proj_currents,
\(r) {
subset(r, names(r)[grepl("EMwmeanByTSS", names(r))])
}
)
proj_current_cas <- lapply(
proj_currents,
\(r) {
subset(r, names(r)[grepl("EMcaByTSS", names(r))])
}
)
# stacking
pj_wmean <- Reduce(c, proj_current_wmeans)
pj_ca    <- Reduce(c, proj_current_cas)
# calcul de la moyenne pondérée
vec_weight         <- c(1, 2, 3)
proj_current_wmean <- terra::weighted.mean(pj_wmean, vec_weight)
proj_current_ca    <- terra::weighted.mean(pj_ca, vec_weight)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
mods <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
load(p)
return(get(p))
}
)
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)
f <- list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)[1]
here("data", "analysis", "models", f)
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
p
load(p)
get(p
return(get(p))
get(p)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
mods <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
print(f)
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
load(p)
return(get(p))
}
)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
p
load(p)
get(p)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
mods <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
print(f)
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
load(p)
return(get(p))
}
)
f <- list.files(
here("data", "analysis", "models"),
pattern = my_pattern
)[3]
print(f)
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
p
load(p)
get(p)
p <- list.files(pattern = "ensemble\\.models\\.out")
p
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
mods <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
print(f)
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
pfull <- list.files(pattern = "ensemble\\.models\\.out", full.names = T)
load(p)
return(get(pfull))
}
)
pfull
pfull <- list.files(pattern = "ensemble\\.models\\.out", full.names = T)
pfull
pfull <- list.files(
here("data", "analysis", "models", f),
pattern = "ensemble\\.models\\.out",
full.names = T
)
load(p)
get(pfull)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
mods <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
print(f)
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
pfull <- list.files(
here("data", "analysis", "models", f),
pattern = "ensemble\\.models\\.out",
full.names = T
)
load(p)
return(get(pfull))
}
)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
my_pattern
# my_pattern <- patterns[[1]]
# my_name <- algs[[1]]
my_pattern <- patterns[[2]]
my_name <- algs[[2]]
# importation des résultats de modèles ----
proj_currents <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
list.files(
here("data", "analysis", "models", f, "proj_current"),
pattern = "\\.tif",
full.names = T
) %>% rast()
}
)
names(proj_currents) <- c("copernicus", "sextant", "habitat")
# Aggrégation par weighted mean
proj_current_wmeans <- lapply(
proj_currents,
\(r) {
subset(r, names(r)[grepl("EMwmeanByTSS", names(r))])
}
)
proj_current_cas <- lapply(
proj_currents,
\(r) {
subset(r, names(r)[grepl("EMcaByTSS", names(r))])
}
)
# stacking
pj_wmean <- Reduce(c, proj_current_wmeans)
pj_ca    <- Reduce(c, proj_current_cas)
# calcul de la moyenne pondérée
vec_weight         <- c(1, 2, 3)
proj_current_wmean <- terra::weighted.mean(pj_wmean, vec_weight)
proj_current_ca    <- terra::weighted.mean(pj_ca, vec_weight)
# importation du modèle d'ensemble utilisé pour obtenir ses évaluations
mods <- lapply(
list.files(
here("data", "analysis", "models"),
pattern = my_pattern
),
\(f) {
print(f)
setwd(here("data", "analysis", "models", f))
p <- list.files(pattern = "ensemble\\.models\\.out")
obj <- load(p)
return(get(obj))
}
)
names(mods) <- c("copernicus", "sextant", "habitat")
mod_evals <- lapply(mods, get_evaluations)
thlds_TSS <- lapply(mod_evals, \(tb) {
tb %>% filter(metric.eval == "TSS") %>% select(algo, cutoff)
})
thlds_TSS_mean <- do.call(rbind, thlds) %>%
group_by(algo) %>%
summarise(cutoff_mean = ceiling(mean(cutoff)))
thlds_TSS_mean
mod_evals
mod_evals
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
source("~/Documents/mosceco/r_projects/MOSCECO_L2/habitat_suitability/scripts/sdm_1algo_Claremontiella_nodulosa_4A_04_compilation.R", echo=TRUE)
vignette(package = "stars")
library(stars)
vignette(package = "stars")
?`|>`
?`%>%`
